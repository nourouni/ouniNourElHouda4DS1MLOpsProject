name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to the main branch

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"  # Use the Python version you're working with

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint black bandit

      - name: Run pylint for code quality
        run: |
          pylint model_pipeline.py main.py

      - name: Run black for code formatting
        run: |
          black --check model_pipeline.py main.py

      - name: Run bandit for security checks
        run: |
          bandit -r .

  train-model:
    runs-on: ubuntu-latest
    needs: lint-and-test  # Run this job only if lint-and-test succeeds
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare data
        run: |
          python main.py --mode prepare --train_data churn-bigml-80.csv --test_data churn-bigml-20.csv --output prepared_data.pkl

      - name: Train model
        run: |
          python main.py --mode train --train_data churn-bigml-80.csv --test_data churn-bigml-20.csv --save model.pkl

      - name: Evaluate model
        run: |
          python main.py --mode evaluate --load model.pkl --test_data churn-bigml-20.csv

      - name: Save model artifact
        uses: actions/upload-artifact@v3
        with:
          name: model
          path: model.pkl
